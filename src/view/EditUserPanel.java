/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import javax.swing.*;
import java.awt.*;
import java.util.logging.Logger;
import controller.UserController;
import model.User;
import exception.DatabaseException;
import db.DatabaseConnection;
import service.AuthService;

/**
 * Panel untuk mengedit akun customer.
 * Author: Gabriel Prakosa A
 */
public class EditUserPanel extends javax.swing.JPanel {
    private static final Logger LOGGER = Logger.getLogger(EditUserPanel.class.getName());
    private final CardLayout cardLayout;
    private final JPanel parentPanel;
    private final UserController userController;

    public EditUserPanel(JPanel parentPanel, CardLayout cardLayout) {
        this.parentPanel = parentPanel;
        this.cardLayout = cardLayout;
        try {
            this.userController = new UserController(new AuthService(DatabaseConnection.getConnection()));
            initComponents();
        } catch (DatabaseException e) {
            LOGGER.severe("Failed to initialize UserController: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            throw new RuntimeException("Failed to initialize EditUserPanel", e);
        }
    }    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        ewalletBalanceField = new javax.swing.JTextField();
        rekeningBalanceField = new javax.swing.JTextField();
        btnSimpanPerubahan = new javax.swing.JButton();
        btnDashboardAdmin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Halaman Edit Akun", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        btnSimpanPerubahan.setText("Simpan");
        btnSimpanPerubahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanPerubahanActionPerformed(evt);
            }
        });

        btnDashboardAdmin.setText("Kembali");
        btnDashboardAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDashboardAdminActionPerformed(evt);
            }
        });

        jLabel1.setText("Nama Akun :");

        jLabel2.setText("Password :");

        jLabel3.setText("Isi Saldo Ewallet :");

        jLabel4.setText("Isi Saldo Rekening :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameField)
                            .addComponent(passwordField)
                            .addComponent(ewalletBalanceField)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSimpanPerubahan)
                                .addGap(0, 18, Short.MAX_VALUE))
                            .addComponent(rekeningBalanceField))
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(134, 134, 134))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(btnDashboardAdmin)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ewalletBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rekeningBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(btnSimpanPerubahan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnDashboardAdmin)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanPerubahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanPerubahanActionPerformed
        String username = usernameField.getText().trim();
        String password = new String(passwordField.getPassword()).trim();
        String ewalletStr = ewalletBalanceField.getText().trim();
        String rekeningStr = rekeningBalanceField.getText().trim();

        if (username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama akun tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (ewalletStr.isEmpty() || rekeningStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Saldo tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        double ewalletBalance, rekeningBalance;
        try {
            ewalletBalance = Double.parseDouble(ewalletStr);
            rekeningBalance = Double.parseDouble(rekeningStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Saldo harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (ewalletBalance < 0 || rekeningBalance < 0) {
            JOptionPane.showMessageDialog(this, "Saldo tidak boleh negatif!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            User userToUpdate = userController.getUserByUsername(username);
            if (userToUpdate == null) {
                JOptionPane.showMessageDialog(this, "Pengguna tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            userToUpdate.setPassword(password);
            userToUpdate.setEwalletBalance(ewalletBalance);
            userToUpdate.setRekeningBalance(rekeningBalance);

            userController.updateCustomer(username, password, ewalletBalance, rekeningBalance);
            loadUserData(username);
            JOptionPane.showMessageDialog(this, "Akun berhasil diperbarui!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } catch (DatabaseException e) {
            LOGGER.severe("Failed to update user: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSimpanPerubahanActionPerformed

    private void btnDashboardAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDashboardAdminActionPerformed
        LOGGER.info("Kembali ke Halaman Dashboard Admin");
        cardLayout.show(parentPanel, "AdminDashboard");
    }//GEN-LAST:event_btnDashboardAdminActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        String username = usernameField.getText().trim();
        if (!username.isEmpty()) {
            loadUserData(username);
        }
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void loadUserData(String username) {
        try {
            User user = userController.getUserByUsername(username);
            if (user != null) {
                usernameField.setText(user.getUsername());
                passwordField.setText(user.getPassword());
                ewalletBalanceField.setText(String.valueOf(user.getEwalletBalance()));
                rekeningBalanceField.setText(String.valueOf(user.getRekeningBalance()));
            } else {
                passwordField.setText("");
                ewalletBalanceField.setText("");
                rekeningBalanceField.setText("");
            }
        } catch (DatabaseException e) {
            LOGGER.severe("Failed to load user data: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDashboardAdmin;
    private javax.swing.JButton btnSimpanPerubahan;
    private javax.swing.JTextField ewalletBalanceField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField rekeningBalanceField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
